{"version":3,"sources":["components/Header.js","components/ReusableForm.js","components/NewTeaForm.js","components/Tea.js","components/TeaList.js","components/TeaDetail.js","components/EditTeaForm.js","components/TeaControl.js","components/App.js","reportWebVitals.js","index.js"],"names":["Header","className","href","type","data-bs-toggle","data-bs-target","aria-controls","aria-expanded","aria-label","id","aria-current","ReusableForm","props","startingName","tea","name","startingBrand","brand","startingPrice","price","startingFlavor","flavor","startingPints","pints","onSubmit","formSubmissionHandler","placeholder","required","defaultValue","buttonText","NewTeaForm","e","preventDefault","onNewTeaCreation","target","value","v4","Tea","onClick","whenTeaClicked","propTypes","teaList","PropTypes","array","onTeaSelection","func","TeaList","map","TeaDetail","onClickingSell","onClickingDelete","onClickingEdit","EditTeaForm","onEditTea","TeaControl","handleClick","state","selectedTea","setState","formVisibleOnPage","editing","prevState","handleAddingNewTea","newTea","newMasterTeaList","masterTeaList","concat","handleChangingSelectedTea","filter","handleDeletingTea","handleSellingTea","handleEditClick","handleEditingTeaInList","teaToEdit","editedMasterTeaList","empty","currentlyVisibleState","this","length","Fragment","React","Component","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.7f282d0e.chunk.js","sourcesContent":["import React from \"react\";\n\nfunction Header(){\n  return (\n    <>\n      <nav className=\"navbar navbar-expand-md navbar-dark bg-dark\">\n        <div className=\"container-fluid\">\n          <a className=\"navbar-brand float-md-right\" href=\"#!\">Boba Bar</a>\n          <button className=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarDark\" aria-controls=\"navbarDark\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n            <span className=\"navbar-toggler-icon\"></span>\n          </button>\n          <div className=\"collapse navbar-collapse show\" id=\"navbarDark\">\n            <ul className=\"navbar-nav ms-auto mb-2 mb-lg-0\">\n              <li className=\"nav-Merch\">\n                <a className=\"nav-link active\" aria-current=\"page\" href=\"/\">Reset</a>\n              </li>\n            </ul>\n          </div>\n        </div>\n      </nav>\n    </>\n  )\n}\nexport default Header;","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nfunction ReusableForm(props) {\n  const startingName = props.tea ? props.tea.name : '';\n  const startingBrand = props.tea ? props.tea.brand : '';\n  const startingPrice = props.tea? props.tea.price : '';\n  const startingFlavor = props.tea? props.tea.flavor : '';\n  const startingPints = props.tea? props.tea.pints : '';\n\n  return (\n    <>\n      <div className='tea-form'>\n        <form onSubmit={props.formSubmissionHandler}>\n          <input\n            className=\"form-control\"\n            type='text'\n            name='name'\n            placeholder='name' \n            required\n            defaultValue={startingName}\n          />\n          <input\n            className=\"form-control\"\n            type='text'\n            name='brand'\n            placeholder='brand' \n            required\n            defaultValue={startingBrand}\n          />\n          <input\n            className=\"form-control\"\n            type='text'\n            name='price'\n            placeholder='price' \n            required\n            defaultValue={startingPrice}\n          />\n          <input\n            className=\"form-control\"\n            type='string'\n            name='flavor'\n            placeholder='flavor' \n            required\n            defaultValue={startingFlavor}\n          />\n          <input\n            className=\"form-control\"\n            type='string'\n            name='pints'\n            placeholder='pints' \n            required\n            defaultValue={startingPints}\n          />\n            <button className=\"btn btn-warning\" type='submit'>{props.buttonText}</button>\n        </form>\n      </div>\n    </>\n  );\n}\n\nReusableForm.propTypes = {\n  formSubmissionHandler: PropTypes.func,\n  buttonText: PropTypes.string,\n  tea: PropTypes.object\n};\n\nexport default ReusableForm;","import React from \"react\";\nimport { v4 } from 'uuid';\nimport PropTypes from 'prop-types';\nimport ReusableForm from \"./ReusableForm\";\n\nfunction NewTeaForm(props){\n  function handleNewTeaFormSubmission(e) {\n    e.preventDefault();\n    props.onNewTeaCreation({\n      name: e.target.name.value,\n      brand: e.target.brand.value,\n      price: e.target.price.value,\n      flavor: e.target.flavor.value,\n      pints: e.target.pints.value,\n      id: v4()\n    });\n  }\n\n  return (\n    <>\n      <ReusableForm \n        formSubmissionHandler = {handleNewTeaFormSubmission}\n        buttonText=\"Add New Tea\"\n      />\n    </>\n  )\n}\n\nNewTeaForm.propTypes = {\n  onNewTeaCreation: PropTypes.func,\n};\n\nexport default NewTeaForm;","import React from \"react\";\nimport PropTypes from 'prop-types';\n\nfunction Tea(props){\n  return (\n    <>\n      <div className=\"tea\" onClick = {() => props.whenTeaClicked(props.id)}>\n        <h2><b>Name:</b> {props.name}</h2>\n        <h3><b>Brand:</b> {props.brand}</h3>\n        <h3><b>Price:</b> {props.price}</h3>\n        <h3><b>Flavor:</b> {props.flavor}</h3>\n        <h3><b>Pints Left:</b> {props.pints}</h3>\n        <hr />\n      </div>\n    </>\n  )\n} \n\nTea.propTypes = {\n  whenTeaClicked: PropTypes.func,\n  name: PropTypes.string.isRequired,\n  brand: PropTypes.string.isRequired,\n  price: PropTypes.string.isRequired,\n  flavor: PropTypes.string.isRequired,\n  pints: PropTypes.string.isRequired,\n  id: PropTypes.string.isRequired\n}\n\nexport default Tea;","import React from \"react\";\nimport Tea from \"./Tea\";\nimport PropTypes from 'prop-types';\n\nfunction TeaList(props){\n  return(\n    <>\n      {props.teaList.map((tea) => \n        <Tea\n          whenTeaClicked = {props.onTeaSelection}\n          name = {tea.name}\n          brand = {tea.brand}\n          price = {tea.price}\n          flavor = {tea.flavor}\n          pints = {tea.pints}\n          id = {tea.id}\n          key = {tea.id}\n        \n        />\n      )}\n    </>\n  )\n}\n\nTea.propTypes = {\n  teaList: PropTypes.array,\n  onTeaSelection: PropTypes.func\n}\n\nexport default TeaList;","import React from \"react\";\nimport PropTypes from 'prop-types';\n\nfunction TeaDetail(props){\n  const {tea, onClickingSell, onClickingDelete} = props;\n\n  let pints = tea.pints === 0 ? \"Out of Stock\" : tea.pints;\n\n\n  return (\n    <>\n      <div className=\"tea-form\">\n        <h2><b>Name:</b> {tea.name}</h2>\n        <h3><b>Brand:</b> {tea.brand}</h3>\n        <h3><b>Price:</b> {tea.price}</h3>\n        <h3><b>Flavor:</b> {tea.flavor}</h3>\n        <h3><b>Pints Left:</b> {pints}</h3>\n        <button\n          className = \"btn btn-warning\"\n          onClick = {() => onClickingSell(tea)}>\n            Sell 1 Pint\n        </button>\n        <button\n          className = \"btn btn-success\"\n          onClick = {props.onClickingEdit}>\n            Update Tea\n        </button>\n        <button\n          className = \"btn btn-danger\"\n          id = \"delete\"\n          onClick = {() => onClickingDelete(tea.id)}>\n            Delete Tea\n        </button>\n      </div>\n\n    </>\n  )\n\n}\n\nTeaDetail.propTypes = {\n  tea: PropTypes.object,\n  onClickingSell: PropTypes.func,\n  onClickingDelete: PropTypes.func,\n  onClickingEdit: PropTypes.func,\n};\n\nexport default TeaDetail;","import React from \"react\";\nimport ReusableForm from \"./ReusableForm\";\nimport PropTypes from 'prop-types';\n\nfunction EditTeaForm (props) {\n  const { tea } = props;\n\n  function handleEditTeaFormSubmission(e) {\n    e.preventDefault();\n    props.onEditTea({\n      name: e.target.name.value,\n      brand: e.target.brand.value,\n      price: e.target.price.value,\n      flavor: e.target.flavor.value,\n      pints: e.target.pints.value\n    })\n  }\n\n  return (\n    <>\n      <ReusableForm \n        formSubmissionHandler = {handleEditTeaFormSubmission}\n        tea = {tea}\n        buttonText = \"Update Tea\"\n      />\n    </>\n  )\n}\n\nEditTeaForm.propTypes = {\n  tea: PropTypes.object,\n  onEditTea: PropTypes.func\n};\n\nexport default EditTeaForm;","import React from \"react\";\nimport NewTeaForm from \"./NewTeaForm\";\nimport TeaList from \"./TeaList\";\nimport TeaDetail from \"./TeaDetail\";\nimport EditTeaForm from \"./EditTeaForm\";\n\nclass TeaControl extends React.Component {\n  \n  constructor(props) {\n    super(props);\n    this.state = {\n      formVisibleOnPage: false,\n      masterTeaList: [],\n      selectedTea: null,\n      editing: false,\n    };\n  }\n\n  handleClick = () => {\n    if (this.state.selectedTea != null) {\n      this.setState({\n        formVisibleOnPage: false,\n        selectedTea: null,\n        editing: false,\n      });\n    } else {\n      this.setState(prevState => ({\n        formVisibleOnPage: !prevState.formVisibleOnPage,\n      }));\n    }\n  }\n\n  handleAddingNewTea = (newTea) => {\n    const newMasterTeaList = this.state.masterTeaList.concat(newTea);\n    this.setState({\n      masterTeaList: newMasterTeaList,\n      formVisibleOnPage: false\n    });\n  }\n\n  handleChangingSelectedTea = (id) => {\n    const selectedTea = this.state.masterTeaList.filter(tea => tea.id === id)[0];\n    this.setState({\n      selectedTea: selectedTea\n    });\n  }\n\n  handleDeletingTea = (id) => {\n    const newMasterTeaList = this.state.masterTeaList\n      .filter(tea => tea.id !== id);\n    this.setState({\n      masterTeaList: newMasterTeaList,\n      selectedTea: null\n    });\n  }\n\n  handleSellingTea = (tea) => {\n    if (tea.pints > 0) {\n      tea.pints--;\n    }\n    this.setState({\n      selectedTea: tea\n    });\n  }\n\n  handleEditClick = () => {\n    this.setState({\n      editing: true\n    });\n  }\n\n  handleEditingTeaInList = (teaToEdit) => {\n    const editedMasterTeaList = this.state.masterTeaList\n      .filter(tea => tea.id !== this.state.selectedTea.id)\n      .concat(teaToEdit);\n    this.setState({\n      masterTeaList: editedMasterTeaList,\n      editing: false,\n      selectedTea: null\n    });\n  }\n\n  render(){\n    let empty = null;\n    let buttonText = null;\n    let currentlyVisibleState = null;\n\n    if (this.state.masterTeaList.length === 0) {\n      empty = <h3>No Teas Yet</h3>\n      buttonText = \"Add new Tea\";\n    }\n\n    if (this.state.editing) {\n      currentlyVisibleState = <EditTeaForm\n        tea = {this.state.selectedTea}\n        onEditTea = {this.handleEditingTeaInList}\n      />\n      buttonText = \"Return to Tea List\";\n    } else if (this.state.selectedTea != null) {\n      currentlyVisibleState = \n      <TeaDetail\n        tea = {this.state.selectedTea}\n        onClickingDelete = {this.handleDeletingTea}\n        onClickingEdit = {this.handleEditClick}\n        onClickingSell = {this.handleSellingTea}\n      />\n      buttonText = \"Return to Tea List\";\n    } else if (this.state.formVisibleOnPage) {\n      currentlyVisibleState = \n      <NewTeaForm \n        onNewTeaCreation={this.handleAddingNewTea}\n      />\n      buttonText = \"Return to Tea List\";\n    } else {\n      currentlyVisibleState = \n      <TeaList\n        teaList = {this.state.masterTeaList}\n        onTeaSelection = {this.handleChangingSelectedTea}\n      />;\n      buttonText = \"Add Tea\";\n    }\n\n    return (\n      <React.Fragment>\n        {empty}\n        {currentlyVisibleState}\n        <button className = \"btn btn-primary\" onClick={this.handleClick}>{buttonText}</button>\n      </React.Fragment>\n    )\n  }\n}\n\nexport default TeaControl;","import React from \"react\";\nimport Header from \"./Header\";\nimport TeaControl from \"./TeaControl\";\n\nfunction App(){\n  return (\n    <>\n    <Header />\n    <TeaControl />\n    </>\n  )\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport '../node_modules/bootstrap/dist/css/bootstrap.min.css';\nimport './index.css';\nimport App from './components/App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}